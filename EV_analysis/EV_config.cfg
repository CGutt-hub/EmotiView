[DEFAULT]
# Core Settings
main_logger_name = EmotiViewOrchestrator
log_level = INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL
# The above line is fine, as the comment is intended for the user.
# The issue arises when comments are *after* a value that is then parsed.

[Data]
# Base directories for raw data and output
base_raw_data_dir = D:\rawData
base_output_dir = D:\repoShaggy\EmotiView\EV_results
# Comma-separated list of participant IDs to process.
# If empty or not provided, participant_range_start and participant_range_end will be used.
# participant_ids = EV_P005, EV_P006
participant_ids =
participant_range_start = 0 # Used if participant_ids is empty. Set to 0 to start from the first participant.
participant_range_end = 30   # Used if participant_ids is empty. Processes indices from participant_range_start up to (participant_range_end - 1). For effectively open-ended processing, set this to a value greater than your highest anticipated participant index.

[Git]
# Whether to use Git for tracking changes
use_git_tracking = False
# Path to the Git repository
repository_path = D:\repoShaggy\EmotiView

[XDF]
# Stream names within the XDF file
eeg_stream_name = BrainAmpSeries-1
fnirs_stream_name = NIRStar
ecg_stream_name = ECG
eda_stream_name = EDA
marker_stream_name = BrainAmpSeries-1-Markers

[Segmentation]
# Offsets relative to the trigger for segmenting data (seconds)
trial_start_offset = -2.0  # Start 2s before stimulus marker
trial_end_offset = 60.0    # End 60s after stimulus marker
# Comma-separated list of condition names to map from XDF LSL markers for epoching
conditions_to_map = Positive,Negative,Neutral # Match marker values from E-Prime LSL stream
# EPrimeSegmenter specific: name of the column in E-Prime TXT file that indicates trial type/condition
eprime_event_column = Procedure[Trial] # Example, adjust to your E-Prime output

[QuestionnaireReader] # Removed inline comment from filename_template
filename_template = {participant_id}_questionnaires.txt
file_type = txt # or csv if your txt is comma-separated
delimiter = \t  # Use \t for tab-separated, or , for comma-separated

[QuestionnairePreprocessing]
participant_id_column_original = Subject # Column name in the questionnaire TXT file
output_participant_id_col_name = participant_id # Standardized PID column name

[QuestionnaireItemMap]
# Maps original item column names from the questionnaire file to standardized names.
# Example: OriginalNameInFile = StandardizedNameForProcessing
# PANAS Example (replace with your actual items)
PANAS_Item1_Active = panas_active
PANAS_Item2_Distressed = panas_distressed
PANAS_Item3_Excited = panas_excited
# STAI Example
STAI_T1_Calm = stai_t_calm
STAI_T2_Tense = stai_t_tense

[ScaleDef_PANAS_Positive]
items = panas_active, panas_excited # Standardized names from ItemMap
scoring_method = sum
min_valid_items_ratio = 0.8

[ScaleDef_PANAS_Negative]
items = panas_distressed # Add more items
scoring_method = sum

[ScaleDef_STAI_Trait]
items = stai_t_calm, stai_t_tense # Add more items
scoring_method = sum
# Example of reverse coded items for STAI_Trait if 'stai_t_calm' was reverse
# [ReverseCoded_STAI_Trait]
# stai_t_calm = min_val:1,max_val:4


[EEG]
eeg_filter_l_freq = 1.0
eeg_filter_h_freq = 40.0
eeg_reference = average
ica_n_components = 30
ica_random_state = 42
ica_accept_labels = brain,Other # Comma-separated
resample_sfreq = 250.0 # Target sampling frequency for EEG before ICA (Hz). Set to 0 or comment out to disable.
ica_reject_threshold = 0.8

[EDA]
eda_cleaning_method = neurokit

[ECG]
ecg_rpeak_method = neurokit

[HRVProcessing]
target_sfreq_continuous_hrv = 4.0 # Hz, for interpolating NNIs for PLV

[SCRProcessing]
scr_amplitude_min = 0.01

[FNIRS]
beer_lambert_ppf = 6.0
short_channel_regression = True
motion_correction_method = tddr # 'tddr', 'savgol', 'none'
filter_l_freq = 0.01
filter_h_freq = 0.1

[FNIRS_DM] # Design Matrix specific parameters
hrf_model = glover
drift_model = polynomial
drift_order = 1
# fir_delays = 0,1,2,3,4,5 # Example if hrf_model was 'fir'

[FNIRS_EventMapping]
# Map raw XDF LSL marker values to condition names for fNIRS GLM
1 = Positive
2 = Negative
3 = Neutral

[FNIRS_ConditionDurations]
# Duration in seconds for each condition type used in fNIRS GLM
Positive = 60.0
Negative = 60.0
Neutral = 60.0

[FNIRS_Contrasts]
# Define contrasts for GLM, format: ContrastName = Cond1:Weight1,Cond2:Weight2,...
Positive_vs_Baseline = Positive:1
Negative_vs_Baseline = Negative:1
Positive_vs_Negative = Positive:1,Negative:-1

[PLV]
eeg_channels = F3,F4 # Comma-separated
# Define bands as semicolon-separated "Name:(low,high)"
eeg_bands_config = Alpha:(8,13);Beta:(13,30)

[FAI]
channel_left = F3
channel_right = F4
# Define bands as semicolon-separated "Name:(low,high)"
bands_config = Alpha:(8,13);Theta:(4,8)


[Plotting]
reporting_figure_format = png
reporting_dpi = 100

[Parallel]
# The number of parallel processes to run. For a 20-core machine,
# a value of 16-18 is a good starting point to leave resources for the OS.
max_workers = 16

[ContinuousMode]
# Settings for running the orchestrator indefinitely # Removed inline comment from polling_interval_seconds
polling_interval_seconds = 300

[GroupLevelSettings]
results_dir_name = EV_GroupResults ; Subdirectory within base_output_dir for group results

[GroupPreproc_AggregatePLV]
method = concat_dataframes_from_artifacts
artifact_data_path = plv_results_df # Removed inline comment
output_artifact_key = group_plv_long_df

[GroupPreproc_AggregateFAI]
method = concat_dataframes_from_artifacts # Assuming FAI results are structured per band and then per condition in a DataFrame
artifact_data_path = fai_results_df # Removed inline comment
output_artifact_key = group_fai_long_df

[GroupAnalysis_PLV_Alpha_ANOVA]
analyzer_key = anova
method_to_call = perform_rm_anova
input_data_key = group_plv_long_df
method_param_dv = plv
method_param_within = condition,eeg_band,modality_pair # Example, adjust based on actual columns in group_plv_long_df
method_param_subject = participant_id
method_param_apply_fdr = True ; Whether to apply FDR correction to the results of this analysis
method_param_p_value_col_name = p-unc # Column name for uncorrected p-values in pingouin ANOVA output
output_filename_csv = group_plv_rm_anova_results.csv

[GroupAnalysis_FAI_Alpha_ANOVA]
analyzer_key = anova
method_to_call = perform_rm_anova
input_data_key = group_fai_long_df # Removed inline comment
method_param_dv = fai_value ; Assuming this column name
method_param_within = condition,hemisphere_pair # Example, adjust based on actual columns
method_param_subject = participant_id
method_param_apply_fdr = True
method_param_p_value_col_name = p-unc ; Column name for uncorrected p-values in pingouin ANOVA output
output_filename_csv = group_fai_rm_anova_results.csv